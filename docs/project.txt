СОДЕРЖАНИЕ
ТЕРМИНЫ И ОПРЕДЕЛЕНИЯ ........................................................................ 3
ПЕРЕЧЕНЬ СОКРАЩЕНИЙ И ОБОЗНАЧЕНИЙ ....................................... 4
ВВЕДЕНИЕ ............................................................................................................ 5
1 ИССЛЕДОВАНИЕ ПРОБЛЕМЫ.......................................................... 6
1.1 ОПИСАНИЕ ПРОБЛЕМЫ .................................................................... 6
1.2 АКТУАЛЬНОСТЬ .................................................................................... 6
1.3 АНАЛИЗ АНАЛОГОВ ............................................................................. 7
1.4 ДОПОЛНИТЕЛЬНЫЕ ОСОБЕННОСТИ ПРОБЛЕМАТИКИ,
ВЛИЯЮЩИЕ НА ВЫБОР ИТОГОВОГО РЕШЕНИЯ ................................ 8
2 РЕШЕНИЕ ПРОБЛЕМЫ ....................................................................... 8
2.1 ТЕХНИЧЕСКОЕ ЗАДАНИЕ .................................................................. 8
2.2 ОПИСАНИЕ КОНЦЕПЦИИ ................................................................ 10
2.3 ВЫБОР ТЕХНОЛОГИЙ ....................................................................... 10
2.4 ПРИНЦИП РАБОТЫ ............................................................................ 11
2.5 РЕШЕНИЕ ............................................................................................... 12
2.6 ОБОСНОВАНИЕ СООТВЕТСТВИЯ ................................................. 15
2.7 ТЕСТИРОВАНИЕ .................................................................................. 16
3 НОРМАТИВНО-ПРАВОВЫЕ АСПЕКТЫ ....................................... 17
ЗАКЛЮЧЕНИЕ .................................................................................................. 18
СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ ..................................... 19
3
ТЕРМИНЫ И ОПРЕДЕЛЕНИЯ
Конфигурационный файл веб-сервера – файл, содержащий настройки для
управления работой веб-сервера, включая параметры безопасности, правила
обработки запросов и другие важные установки.
Внешний периметр инфраструктуры – граница между внутренней
(защищенной) сетью организации и внешними сетями, включая интернет. В
контексте проекта это та часть инфраструктуры, где размещаются веб-
серверы.
Эталонные решения (в контексте конфигураций) – оптимальные, безопасные
настройки веб-сервера, которые используются как образец для сравнения. В
проекте они служат базой для выявления потенциально опасных
конфигураций.
Open-source решение – программное обеспечение с открытым исходным
кодом, которое может быть свободно использовано, изменено и
распространено любым пользователем. Это означает, что код сканера
доступен для изучения и модификации.
4
ПЕРЕЧЕНЬ СОКРАЩЕНИЙ И ОБОЗНАЧЕНИЙ
CVE (Common Vulnerabilities and Exposures) – база данных общеизвестных
уязвимостей информационной безопасности. Используется как источник
примеров уязвимых конфигураций.
ПО – Программное обеспечение
ОС – Операционная система
HTTP (HyperText Transfer Protocol) – Протокол передачи гипертекста
ГОСТ Р - Государственный стандарт Российской Федерации
ИСО/МЭК (ISO/IEC) – Международная организация по
стандартизации/Международная электротехническая комиссия
ФСТЭК – Федеральная служба по техническому и экспортному контролю
ФСБ – Федеральная служба безопасности
5
ВВЕДЕНИЕ
Веб-сервера, речь о которых пойдет в проекте — это
специализированное программное обеспечение, которое обрабатывает HTTP-
запросы от клиентов (обычно веб-браузеров) и отвечает на них, предоставляя
запрошенные веб-страницы, файлы или другие данные.
Они играют важную роль, так как обрабатывают весь трафик
пользователя и имеют большие привилегии на хосте, что делает их критически
важными компонентами инфраструктуры с точки зрения безопасности.
Довольно часто из-за неосведомленности или ошибки людей,
ответственных за запуск и сопровождение веб-сервисов, встречаются веб-
сервера (пр. Nginx, Apache) с неправильно настроенными
конфигурационными файлами, что может привести к уязвимостям,
позволяющим злоумышленникам получить несанкционированный доступ к
системе, данным или внутренней сети организации.
Цель проекта - разработать автоматизированное решение для анализа
конфигурационных файлов веб-серверов, с целью обнаружения ошибочной
настройки и уведомления пользователя. Подобный анализатор помогает
администраторам выявить и оперативно решить проблему во внешнем
периметре инфраструктуры. В тоже время он полезен крупным компаниям для
регулярного сканирования и своевременного предупреждения о проблемах в
безопасности.
Пользователями данного продукта могут выступать владельцы
продуктов, веб-разработчики и системные администраторы, которым
необходимо иметь безопасную инфраструктуру. Также оно полезно крупным
IT-компаниям, для периодического анализа конфигов веб-серверов, с целью
своевременного обнаружения уязвимостей.
6
1 ИССЛЕДОВАНИЕ ПРОБЛЕМЫ
1.1 ОПИСАНИЕ ПРОБЛЕМЫ
Неверные конфигурации в программном обеспечении, в частности веб-
серверах, могут быть использованы злоумышленниками для получения
несанкционированного доступа во внутренний периметр системы и сети,
кражи данных или проведения других вредоносных действий.
Многие администраторы и разработчики совершают ошибку, полагаясь
только на стандартные настройки безопасности (статья на тему уязвимости в
Apache от AngaraMSS [10]). Это создает ложное ощущение защиты, хотя на
самом деле безопасность системы зависит от детальной настройки параметров
под конкретные условия работы.
1.2 АКТУАЛЬНОСТЬ
На данный момент веб-сервера Nginx и Apache, занимают примерно 21%
и 17% соответственно, от общего количества запущенных HTTP-серверов,
обслуживающих веб-сайты (по статистике Netcraft [6]). В связи с этим хосты
с данными веб-серверами часто подвергаются кибератакам, существенная
часть которых обусловлена уязвимостями из-за неверных конфигураций.
Рис. 1 Статистика от Netcraft
7
Поэтому важно регулярно проверять сервисы на наличие уязвимых
конфигураций и принимать меры по их устранению. В связи с этим данный
проект актуален для большого круга лиц.
В качестве подтверждения можно привести статью [1]-[2] от компании
Trend Micro (крупная ИБ компания, разработчик ПО для кибербезопасности)
о большом количестве уязвимых хостов с неверными конфигурациями веб-
серверов. Статья показывает потребность в готовом продукте для аудита их
конфигураций.
1.3 АНАЛИЗ АНАЛОГОВ
Одним из основных аналогов этого проекта, является утилита,
разработанная компанией Яндекс – Gixy [4].
Вторым аналогичным решением является Nginxpwner, open-source
решение для выявления уязвимостей в Nginx [5].
Они также являются консольными утилитами для статичного анализа
конфигураций веб-серверов.
Ключевым отличием этих решений от разрабатываемого продукта
является поддержка лишь одного веб-сервера - Nginx. Представляемое в
проекте решение должно быть более комплексным и поддерживает другие
сервисы (напр. Apache). Дополнительными преимуществами над решениями
аналогами являются скорость работы и простота использования.
Важно заметить, что по результатам исследования, прямых аналогов,
повторяющих представляемое решение, найдено не было.
8
1.4 ДОПОЛНИТЕЛЬНЫЕ ОСОБЕННОСТИ ПРОБЛЕМАТИКИ,
ВЛИЯЮЩИЕ НА ВЫБОР ИТОГОВОГО РЕШЕНИЯ
Необходимо учесть:
- Технические особенности
- Различная структура конфигурационных файлов у разных
веб-серверов
- Необходимость регулярного обновления базы известных
уязвимостей
- Возможность появления новых типов уязвимостей
- Разные варианты расположения конфигурационных файлов
в системе
- Нормативные требования
2 РЕШЕНИЕ ПРОБЛЕМЫ
2.1 ТЕХНИЧЕСКОЕ ЗАДАНИЕ
Цель: Разработать автоматизированное решение для анализа
конфигурационных файлов веб-серверов (Nginx, Apache) на предмет ошибок
настройки и уязвимостей.
9
Задачи:
- Исследовать работу веб-серверов и структуру их
конфигурационных файлов
- Изучить возможные уязвимости веб-серверов, связанные с
некорректными конфигурациями
- Разработать программное обеспечение для анализа конфигураций
в соответствии с выставленными требованиями
- Провести тестирование и оценку эффективности решения
Требования к разрабатываемому решению:
Функциональные требования:
- Поддержка анализа конфигураций нескольких типов веб-серверов
(Nginx, Apache)
- Возможность указания пользовательского пути к
конфигурационным файлам
- Формирование отчета с рекомендациями по устранению
найденных уязвимостей
- Возможность анализа на основе эталонных конфигураций и
известных уязвимостей из CVE
Технические характеристики:
- Разработка на языке Python
- Реализация в формате консольной утилиты с последующим
добавлением веб-интерфейса
- Open-source решение
- Кроссплатформенность
10
- Работа без дополнительных вычислительных мощностей (считать
работу нормальной при использовании до 1 CPU и 0.1GB RAM)
- Скорость работы (время, необходимое пользователю на то, чтобы
разобраться как верно запустить программу – 2 мин, и скорость
анализа конфигураций – до 0.1с на 1000 строк)
Требования к удобству использования:
- Понятный пользовательский интерфейс
- Наличие документации и инструкций по использованию
- Возможность использования без специальных технических
навыков
- Возможность кастомизации и добавления новых функций
2.2 ОПИСАНИЕ КОНЦЕПЦИИ
Требуется создать open-source решение, консольную программу,
позволяющее быстро и удобно проверять веб-серверы на наличие
небезопасных конфигураций и предоставлять отчет с рекомендациями по их
устранению. В результате пользователь будет получать более полное
представление о безопасности своего хоста и сможет принять меры по
устранению обнаруженных уязвимостей.
2.3 ВЫБОР ТЕХНОЛОГИЙ
Решение разработано на языке программирования Python, т.к. он
довольно быстрый, совместим со многими модулями (в том числе
встроенными), которые понадобились в разработке и наиболее популярный,
что означает что решение более широко поддерживается разработчиками.
11
Также плюсом является то, что он очень прост в запуске и поддерживает
любые ОС, поэтому работа с решением не составит никаких трудностей для
пользователя.
Было проведено тестирование других языков (технологий реализации),
таких как Go и Rust, которые не смогли показать такой же результат в простоте
кода, удобства использования и кроссплатформенности.
Аналогичные решения Gixy и Nginxpwner [4]-[5], тоже являются
консольными утилитами на Python и используют схожий ряд библиотек.
В проекте уже реализована консольная версия, затем будет добавлена
веб-оболочка для удобства пользователя.
2.4 ПРИНЦИП РАБОТЫ
После запуска, пользователь указывает тип веб-сервера, конфигурации
которого хочет проверить, и путь к директории с конфигурационными
файлами (если тот, отличается от пути по умолчанию). Затем продукт будет
решать безопасны ли конфигурации, на основе прописанных в коде
инструкций:
- Первый вариант: утилита выносит вердикт о безопасности
конфигурации на основе эталонных решений и находить различия.
- Второй вариант: сравнивает конфигурационные файлы с заведомо
уязвимыми примерами, которые можно найти в открытых базах.
- Комбинирует оба этих варианта, с целью получения наилучшей
точности и удобства.
12
После проверки безопасности конфигурации пользователю выводится
отчет, содержащий рекомендации по защите.
Упрощённая схема работы с продуктом изображена на Рисунке 2.
Рис. 2 Схема работы с продуктом
Таким образом, проект решит поставленную задачу и найденную
проблему, так как находит уязвимость и сообщает о ней.
2.5 РЕШЕНИЕ
CONFident_tool — это инструмент для автоматизированного анализа
конфигурационных файлов веб-серверов (Nginx, Apache) на предмет ошибок
настройки и потенциальных уязвимостей.
Ознакомится с работой решения и его структурой можно на Рисунках 3,
4 и 5. А также в Github репозитории [9].
13
Рис. 3 Структура проекта
14
Возможности
- Анализ конфигураций Nginx и Apache
- Обнаружение распространенных уязвимостей в настройках
- Формирование подробных отчетов с рекомендациями
- Поддержка различных форматов вывода (консоль, JSON, HTML)
- Возможность указания пользовательского пути к конфигурационным
файлам
Установка
git clone https://github.com/vsosh-anonym/CONFident_tool.git
Использование
conf-ident/main.py --server-type <nginx/apache> --config-path
/path/to/configs --output <console/json/html>
Рис. 4 Работа продукта
15
Рис. 5 Пример сгенерированного отчёта
Список сопроводительной документации
- документация [7]
- инструкция [8]
- пользовательское соглашение [9].
2.6 ОБОСНОВАНИЕ СООТВЕТСТВИЯ
Показателем успешной реализации проекта, его внедрения и
подтверждением его эффективности стало уменьшение количества
реализованных атак на веб-сервера, положительная обратная связь от их
владельцев (пользователей продукта).
16
Большинство пользователей (тестировщиков) отметило, что в проекте
проработан понятный и удобный интерфейс. Также для удобства пользователя
разработана документация [7] и инструкция [9]. Поэтому можно считать, что
использование не требует каких-либо навыков.
Важно заметить, что внедрение не требует дополнительных
вычислительных возможностей, каких-либо дополнительных мероприятий и
особых инженерных навыков. Так как проект open-source, любой человек
может настроить это решение для себя и добавить необходимые ему функции.
2.7 ТЕСТИРОВАНИЕ
Для проверки работоспособности продукта и его соответствия
поставленной задачи, было проведено комплексное функциональное
тестирование. Тестирование осуществлялось в несколько этапов: сначала
были разработаны модульные тесты (Python библиотека unittest) для проверки
корректности работы отдельных компонентов (сканеров Nginx и Apache),
затем проведено тестирование для проверки взаимодействия
между модулями. Был создан специальный набор конфигураций, содержащих
как безопасные настройки, так и различные типы уязвимостей. Результаты
тестирования показали обнаружение большей части заложенных уязвимостей
и совсем не большое количество ложных срабатываний (не более 10%), что
подтверждает соответствие продукта поставленной цели.
Дополнительно было проведено нагрузочное тестирование,
подтвердившее эффективную работу инструмента даже с большими объемами
конфигурационных файлов без существенного увеличения времени
обработки.
17
3 НОРМАТИВНО-ПРАВОВЫЕ АСПЕКТЫ
В процессе работы над проектом были рассмотрены следующие документы:
1. Национальный стандарт РФ «Защита информации Уязвимости
Информационных систем» ГОСТ Р 56546 -2015.
2. ГОСТР ИСО/МЭК 27001— 2021 «Информационная технология.
Методы и средства обеспечения безопасности. Системы менеджмента
информационной безопасности. Требования».
3. Приказ ФСТЭК России от 25 декабря 2017 г. № 239 Об утверждении
требований по обеспечению безопасности значимых объектов критической
информационной инфраструктуры Российской Федерации (в ред. приказа ФСТЭК
России от 26 марта 2019 г. № 60).
4. Приказ ФСБ России от 06 мая 2019г. № 196 Об утверждении
Требований к средствам, предназначенным для обнаружения, предупреждения и
ликвидации последствий компьютерных атак и реагирования на компьютерные
инциденты.
5. Методический документ Руководство по организации процесса
управления уязвимостями в органе (организации) (утв. ФСТЭК России 17.05.2023)
Продукт полностью соответствует указанным документам.
Также, в продукт входят: документация [7], инструкция [8] и
пользовательское соглашение [9].
18
ЗАКЛЮЧЕНИЕ
По результатам анализа проблемы, было разработано комбинированное
решение, которое использует эталонные конфигурации и базу известных
уязвимостей для максимально точного выявления проблем безопасности в
настройках веб-серверов.
Инструмент является достаточно простым для начинающих
администраторов, но при этом предоставляет расширенные возможности для
опытных специалистов, включая возможность добавления собственных
правил проверки и интеграции с существующими системами мониторинга.
Особое внимание следует уделить качеству рекомендаций по
устранению найденных уязвимостей, чтобы пользователи могли быстро
принять необходимые меры, а также обеспечить соответствие требованиям
регулирующих органов в области информационной безопасности.
Данный продукт помогает повысить безопасность веб-серверов, в том
числе для пользователей с невысокой квалификацией. Это сильно поможет
снизить число киберпреступлений и случайных ошибок. Это показывает, что
продукт выполняет поставленную задачу и решает найденную в проекте
проблему.
19
СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ
[1] Статья компании Trend Micro о неправильных конфигурациях
URL:https://www.trendmicro.com/ru_ru/about/newsroom/press-
releases/2020/2020-04-08.html - (дата обращения: 12.01.2025)
[2] Отчёт Trend Micro о неправильных конфигурациях (англ. яз)
URL:https://www.trendmicro.com/vinfo/us/security/news/virtualization-and-
cloud/exploring-common-threats-to-cloud-security - (дата обращения: 12.01.2025)
[3] Статья BI.ZONE об уязвимости хостов для кибератак
URL:https://bi.zone/news/dve-treti-khostov-uyazvimy-dlya-kiberatak-iz-za-
nepravilnykh-nastroek/ - (дата обращения: 12.01.2025)
[4] Утилита Gixy
URL: https://github.com/yandex/gixy - (дата обращения: 12.01.2025)
[5] Утилита Nginxpwner
URL: https://github.com/stark0de/nginxpwner - (дата обращения: 12.01.2025)
[6] Статья со статистикой Netcraft
URL: https://www.netcraft.com/blog/november-2023-web-server-survey/
- (дата обращения: 12.01.2025)
[7] Документация продукта
URL:https://github.com/vsosh-anonym
/CONFident_tool/blob/main/docs/documentation.md
- (дата обращения: 17.03.2025)
20
[8] Пользовательское соглашение
URL: https://github.com/vsosh-anonym
/CONFident_tool/blob/main/docs/user_agreement.docx
- (дата обращения: 17.03.2025)
[9] Инструкция пользователя
URL: https://github.com/vsosh-anonym/
CONFident_tool/blob/main/docs/manual.md
- (дата обращения: 17.03.2025)
[9] Github репозиторий
URL: https://github.com/vsosh-anonym/CONFident_tool - (дата обращения:
17.03.2025)
[10] Статья на тему уязвимости в Apache от AngaraMSS
URL: https://www.angaramss.ru/news/apache-ustranila-opasnye-uyazvimosti-v-
veb-servere/ - (дата обращения: 17.03.2025)